// // Scan Code Expected unshifted char
0x0000 0x00 //input (line): 0(0x00), VK_NOTDEF, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 1(0x01), VK_LBUTTON, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 2(0x02), VK_RBUTTON, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 3(0x03), VK_CANCEL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 4(0x04), VK_MBUTTON, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 5(0x05), undef_0x05, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 6(0x06), undef_0x06, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 7(0x07), undef_0x07, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x000E 0x00 //input (line): 8(0x08), VK_BACK, output (by scancode): VK_BACK, output char code:VK_NOTDEF
0x000F 0x09 //input (line): 9(0x09), VK_TAB, output (by scancode): VK_TAB, output char code:VK_TAB
0x0000 0x00 //input (line): 10(0x0a), undef_0x0A, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 11(0x0b), undef_0x0B, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0053 0x00 //input (line): 12(0x0c), VK_CLEAR, output (by scancode): VK_DECIMAL, output char code:VK_NOTDEF
0x001C 0x0D //input (line): 13(0x0d), VK_RETURN, output (by scancode): VK_RETURN, output char code:VK_RETURN
0x0000 0x00 //input (line): 14(0x0e), undef_0x0E, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 15(0x0f), undef_0x0F, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x002A 0x00 //input (line): 16(0x10), VK_SHIFT, output (by scancode): VK_LSHIFT, output char code:VK_NOTDEF
0x001D 0x00 //input (line): 17(0x11), VK_CONTROL, output (by scancode): VK_CONTROL, output char code:VK_NOTDEF
0x0038 0x00 //input (line): 18(0x12), VK_MENU, output (by scancode): VK_MENU, output char code:VK_NOTDEF
0x0045 0x00 //input (line): 19(0x13), VK_PAUSE, output (by scancode): VK_NUMLOCK, output char code:VK_NOTDEF
0x003A 0x00 //input (line): 20(0x14), VK_CAPITAL, output (by scancode): VK_CAPITAL, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 21(0x15), VK_HANGUL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 22(0x16), undef_0x16, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 23(0x17), VK_JUNJA, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 24(0x18), VK_FINAL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 25(0x19), VK_KANJI, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 26(0x1a), undef_0x1A, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0001 0x1B //input (line): 27(0x1b), VK_ESCAPE, output (by scancode): VK_ESCAPE, output char code:VK_ESCAPE
0x0000 0x00 //input (line): 28(0x1c), VK_CONVERT, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 29(0x1d), VK_NOCONVERT, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 30(0x1e), undef_0x1E, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 31(0x1f), undef_0x1F, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0039 0x20 //input (line): 32(0x20), VK_SPACE, output (by scancode): VK_SPACE, output char code:VK_SPACE
0x0049 0x00 //input (line): 33(0x21), VK_PRIOR, output (by scancode): VK_PRIOR, output char code:VK_NOTDEF
0x0051 0x00 //input (line): 34(0x22), VK_NEXT, output (by scancode): VK_NUMPAD3, output char code:VK_NOTDEF
0x004F 0x00 //input (line): 35(0x23), VK_END, output (by scancode): VK_NUMPAD1, output char code:VK_NOTDEF
0x0047 0x00 //input (line): 36(0x24), VK_HOME, output (by scancode): VK_HOME, output char code:VK_NOTDEF
0x004B 0x00 //input (line): 37(0x25), VK_LEFT, output (by scancode): VK_NUMPAD4, output char code:VK_NOTDEF
0x0048 0x00 //input (line): 38(0x26), VK_UP, output (by scancode): VK_UP, output char code:VK_NOTDEF
0x004D 0x00 //input (line): 39(0x27), VK_RIGHT, output (by scancode): VK_NUMPAD6, output char code:VK_NOTDEF
0x0050 0x00 //input (line): 40(0x28), VK_DOWN, output (by scancode): VK_NUMPAD2, output char code:VK_NOTDEF
0x004C 0x00 //input (line): 41(0x29), VK_SELECT, output (by scancode): VK_NUMPAD5, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 42(0x2a), VK_PRINT, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 43(0x2b), VK_EXECUTE, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0054 0x00 //input (line): 44(0x2c), VK_SNAPSHOT, output (by scancode): VK_F11, output char code:VK_NOTDEF
0x0052 0x00 //input (line): 45(0x2d), VK_INSERT, output (by scancode): VK_NUMPAD0, output char code:VK_NOTDEF
0x0053 0x00 //input (line): 46(0x2e), VK_DELETE, output (by scancode): VK_DECIMAL, output char code:VK_NOTDEF
0x0035 0x2F //input (line): 47(0x2f), VK_HELP, output (by scancode): VK_SLASH, output char code:VK_HELP
0x000B 0x30 //input (line): 48(0x30), VK_0, output (by scancode): VK_0, output char code:VK_0
0x0002 0x31 //input (line): 49(0x31), VK_1, output (by scancode): VK_1, output char code:VK_1
0x0003 0x32 //input (line): 50(0x32), VK_2, output (by scancode): VK_2, output char code:VK_2
0x0004 0x33 //input (line): 51(0x33), VK_3, output (by scancode): VK_3, output char code:VK_3
0x0005 0x34 //input (line): 52(0x34), VK_4, output (by scancode): VK_4, output char code:VK_4
0x0006 0x35 //input (line): 53(0x35), VK_5, output (by scancode): VK_5, output char code:VK_5
0x0007 0x36 //input (line): 54(0x36), VK_6, output (by scancode): VK_6, output char code:VK_6
0x0008 0x37 //input (line): 55(0x37), VK_7, output (by scancode): VK_7, output char code:VK_7
0x0009 0x38 //input (line): 56(0x38), VK_8, output (by scancode): VK_8, output char code:VK_8
0x000A 0x39 //input (line): 57(0x39), VK_9, output (by scancode): VK_9, output char code:VK_9
0x0027 0x3B //input (line): 58(0x3a), undef_0x3A, output (by scancode): VK_SEMICOLON, output char code:undef_0x3B
0x0000 0x00 //input (line): 59(0x3b), undef_0x3B, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0033 0x33 //input (line): 60(0x3c), undef_0x3C, output (by scancode): VK_COMMA, output char code:VK_3
0x0027 0x3B //input (line): 61(0x3d), undef_0x3D, output (by scancode): VK_SEMICOLON, output char code:undef_0x3B
0x0034 0x34 //input (line): 62(0x3e), undef_0x3E, output (by scancode): VK_PERIOD, output char code:VK_4
0x0035 0x35 //input (line): 63(0x3f), undef_0x3F, output (by scancode): VK_SLASH, output char code:VK_5
0x0000 0x00 //input (line): 64(0x40), undef_0x40, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x001E 0x61 //input (line): 65(0x41), VK_A, output (by scancode): VK_A, output char code:VK_NUMPAD1
0x0030 0x62 //input (line): 66(0x42), VK_B, output (by scancode): VK_B, output char code:VK_NUMPAD2
0x002E 0x63 //input (line): 67(0x43), VK_C, output (by scancode): VK_C, output char code:VK_NUMPAD3
0x0020 0x64 //input (line): 68(0x44), VK_D, output (by scancode): VK_D, output char code:VK_NUMPAD4
0x0012 0x65 //input (line): 69(0x45), VK_E, output (by scancode): VK_E, output char code:VK_NUMPAD5
0x0021 0x66 //input (line): 70(0x46), VK_F, output (by scancode): VK_F, output char code:VK_NUMPAD6
0x0022 0x67 //input (line): 71(0x47), VK_G, output (by scancode): VK_G, output char code:VK_NUMPAD7
0x0023 0x68 //input (line): 72(0x48), VK_H, output (by scancode): VK_H, output char code:VK_NUMPAD8
0x0017 0x69 //input (line): 73(0x49), VK_I, output (by scancode): VK_I, output char code:VK_NUMPAD9
0x0024 0x6A //input (line): 74(0x4a), VK_J, output (by scancode): VK_J, output char code:VK_MULTIPLY
0x0025 0x6B //input (line): 75(0x4b), VK_K, output (by scancode): VK_K, output char code:VK_ADD
0x0026 0x6C //input (line): 76(0x4c), VK_L, output (by scancode): VK_L, output char code:VK_SEPARATOR
0x0032 0x6D //input (line): 77(0x4d), VK_M, output (by scancode): VK_M, output char code:VK_SUBTRACT
0x0031 0x6E //input (line): 78(0x4e), VK_N, output (by scancode): VK_N, output char code:VK_DECIMAL
0x0018 0x6F //input (line): 79(0x4f), VK_O, output (by scancode): VK_O, output char code:VK_DIVIDE
0x0019 0x70 //input (line): 80(0x50), VK_P, output (by scancode): VK_P, output char code:VK_F1
0x0010 0x71 //input (line): 81(0x51), VK_Q, output (by scancode): VK_Q, output char code:VK_F2
0x0013 0x72 //input (line): 82(0x52), VK_R, output (by scancode): VK_R, output char code:VK_F3
0x001F 0x73 //input (line): 83(0x53), VK_S, output (by scancode): VK_S, output char code:VK_F4
0x0014 0x74 //input (line): 84(0x54), VK_T, output (by scancode): VK_T, output char code:VK_F5
0x0016 0x75 //input (line): 85(0x55), VK_U, output (by scancode): VK_U, output char code:VK_F6
0x002F 0x76 //input (line): 86(0x56), VK_V, output (by scancode): VK_V, output char code:VK_F7
0x0011 0x77 //input (line): 87(0x57), VK_W, output (by scancode): VK_W, output char code:VK_F8
0x002D 0x78 //input (line): 88(0x58), VK_X, output (by scancode): VK_X, output char code:VK_F9
0x0015 0x79 //input (line): 89(0x59), VK_Y, output (by scancode): VK_Y, output char code:VK_F10
0x002C 0x7A //input (line): 90(0x5a), VK_Z, output (by scancode): VK_Z, output char code:VK_F11
0x001A 0x5B //input (line): 91(0x5b), VK_LWIN, output (by scancode): VK_LBRACKET, output char code:VK_LWIN
0x002B 0x5C //input (line): 92(0x5c), VK_RWIN, output (by scancode): VK_BACKSLASH, output char code:VK_RWIN
0x001B 0x5D //input (line): 93(0x5d), VK_APPS, output (by scancode): VK_RBRACKET, output char code:VK_APPS
0x0000 0x00 //input (line): 94(0x5e), undef_0x5E, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 95(0x5f), VK_SLEEP, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0029 0x60 //input (line): 96(0x60), VK_NUMPAD0, output (by scancode): VK_BACKQUOTE, output char code:VK_NUMPAD0
0x0000 0x00 //input (line): 97(0x61), VK_NUMPAD1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 98(0x62), VK_NUMPAD2, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 99(0x63), VK_NUMPAD3, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 100(0x64), VK_NUMPAD4, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 101(0x65), VK_NUMPAD5, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 102(0x66), VK_NUMPAD6, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 103(0x67), VK_NUMPAD7, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 104(0x68), VK_NUMPAD8, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 105(0x69), VK_NUMPAD9, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 106(0x6a), VK_MULTIPLY, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 107(0x6b), VK_ADD, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 108(0x6c), VK_SEPARATOR, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 109(0x6d), VK_SUBTRACT, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 110(0x6e), VK_DECIMAL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 111(0x6f), VK_DIVIDE, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 112(0x70), VK_F1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 113(0x71), VK_F2, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 114(0x72), VK_F3, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 115(0x73), VK_F4, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 116(0x74), VK_F5, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 117(0x75), VK_F6, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 118(0x76), VK_F7, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 119(0x77), VK_F8, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 120(0x78), VK_F9, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 121(0x79), VK_F10, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 122(0x7a), VK_F11, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x001A 0x5B //input (line): 123(0x7b), VK_F12, output (by scancode): VK_LBRACKET, output char code:VK_LWIN
0x00DC 0x5C //input (line): 124(0x7c), VK_F13, output (by scancode): VK_NOTDEF, output char code:VK_RWIN
0x001B 0x5D //input (line): 125(0x7d), VK_F14, output (by scancode): VK_RBRACKET, output char code:VK_APPS
0x0000 0x00 //input (line): 126(0x7e), VK_F15, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 127(0x7f), VK_F16, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 128(0x80), VK_F17, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 129(0x81), VK_F18, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 130(0x82), VK_F19, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 131(0x83), VK_F20, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 132(0x84), VK_F21, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 133(0x85), VK_F22, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 134(0x86), VK_F23, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 135(0x87), VK_F24, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 136(0x88), undef_0x88, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0054 0x89 //mappped 137 to scancode 0x0054 VK=undef_0x89
0x0055 0x8A //mappped 138 to scancode 0x0055 VK=undef_0x8A
0x0056 0x8B //mappped 139 to scancode 0x0056 VK=undef_0x8B
0x0057 0x8C //mappped 140 to scancode 0x0057 VK=undef_0x8C
0x0058 0x8D //mappped 141 to scancode 0x0058 VK=undef_0x8D
0x0059 0x8E //mappped 142 to scancode 0x0059 VK=undef_0x8E
0x005A 0x8F //mappped 143 to scancode 0x005A VK=undef_0x8F
0x0045 0x00 //input (line): 144(0x90), VK_NUMLOCK, output (by scancode): VK_NUMLOCK, output char code:VK_NOTDEF
0x0046 0x00 //input (line): 145(0x91), VK_SCROLL, output (by scancode): VK_SCROLL, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 146(0x92), undef_0x92, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 147(0x93), undef_0x93, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 148(0x94), undef_0x94, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 149(0x95), undef_0x95, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 150(0x96), undef_0x96, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 151(0x97), undef_0x97, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 152(0x98), undef_0x98, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 153(0x99), undef_0x99, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 154(0x9a), undef_0x9A, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 155(0x9b), undef_0x9B, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x005B 0x9C //mappped 156 to scancode 0x005B VK=undef_0x9C_light
0x005C 0x9D //mappped 157 to scancode 0x005C VK=undef_0x9D
0x005D 0x9E //mappped 158 to scancode 0x005D VK=undef_0x9E
0x0000 0x00 //input (line): 159(0x9f), undef_0x9F, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x002A 0x00 //input (line): 160(0xa0), VK_LSHIFT, output (by scancode): VK_LSHIFT, output char code:VK_NOTDEF
0x0036 0x00 //input (line): 161(0xa1), VK_RSHIFT, output (by scancode): VK_RSHIFT, output char code:VK_NOTDEF
0x001D 0x00 //input (line): 162(0xa2), VK_LCONTROL, output (by scancode): VK_CONTROL, output char code:VK_NOTDEF
0xE010 0x00 //input (line): 163(0xa3), VK_RCONTROL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0038 0x00 //input (line): 164(0xa4), VK_LMENU, output (by scancode): VK_MENU, output char code:VK_NOTDEF
0xE038 0x00 //input (line): 165(0xa5), VK_RMENU, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 166(0xa6), VK_BROWSER_BACK, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 167(0xa7), VK_BROWSER_FORWARD, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 168(0xa8), VK_BROWSER_REFRESH, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 169(0xa9), VK_BROWSER_STOP, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 170(0xaa), VK_BROWSER_SEARCH, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 171(0xab), VK_BROWSER_FAVORITES, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 172(0xac), VK_BROWSER_HOME, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 173(0xad), VK_VOLUME_MUTE, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 174(0xae), VK_VOLUME_DOWN, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 175(0xaf), VK_VOLUME_UP, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 176(0xb0), VK_MEDIA_NEXT_TRACK, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 177(0xb1), VK_MEDIA_PREV_TRACK, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 178(0xb2), VK_MEDIA_STOP, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 179(0xb3), VK_MEDIA_PLAY_PAUSE, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 180(0xb4), VK_LAUNCH_MAIL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 181(0xb5), VK_LAUNCH_MEDIA_SELECT, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 182(0xb6), VK_LAUNCH_APP1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 183(0xb7), VK_LAUNCH_APP2, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 184(0xb8), undef_0xB8, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 185(0xb9), undef_0xB9, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0027 0x3B //input (line): 186(0xba), VK_SEMICOLON, output (by scancode): VK_SEMICOLON, output char code:undef_0x3B
0x000D 0x3D //input (line): 187(0xbb), VK_EQUAL, output (by scancode): VK_ADD, output char code:undef_0x3D
0x0033 0x2C //input (line): 188(0xbc), VK_COMMA, output (by scancode): VK_COMMA, output char code:VK_SNAPSHOT
0x000C 0x2D //input (line): 189(0xbd), VK_HYPHEN, output (by scancode): VK_HYPHEN, output char code:VK_INSERT
0x0034 0x2E //input (line): 190(0xbe), VK_PERIOD, output (by scancode): VK_PERIOD, output char code:VK_DELETE
0x0035 0x2F //input (line): 191(0xbf), VK_SLASH, output (by scancode): VK_SLASH, output char code:VK_HELP
0x0029 0x60 //input (line): 192(0xc0), VK_BACKQUOTE, output (by scancode): VK_BACKQUOTE, output char code:VK_NUMPAD0
0x0000 0x00 //input (line): 193(0xc1), VK_APP1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 194(0xc2), VK_APP2, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 195(0xc3), VK_APP3, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 196(0xc4), VK_APP4, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 197(0xc5), VK_APP5, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 198(0xc6), VK_APP6, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 199(0xc7), undef_0xC7, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 200(0xc8), undef_0xC8, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 201(0xc9), undef_0xC9, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 202(0xca), undef_0xCA, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 203(0xcb), undef_0xCB, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 204(0xcc), undef_0xCC, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 205(0xcd), undef_0xCD, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 206(0xce), undef_0xCE, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 207(0xcf), undef_0xCF, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 208(0xd0), undef_0xD0, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 209(0xd1), undef_0xD1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 210(0xd2), undef_0xD2, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 211(0xd3), undef_0xD3, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 212(0xd4), undef_0xD4, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 213(0xd5), undef_0xD5, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 214(0xd6), undef_0xD6, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 215(0xd7), undef_0xD7, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 216(0xd8), undef_0xD8, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 217(0xd9), undef_0xD9, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 218(0xda), undef_0xDA, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x001A 0x5B //input (line): 219(0xdb), VK_LBRACKET, output (by scancode): VK_LBRACKET, output char code:VK_LWIN
0x002B 0x5C //input (line): 220(0xdc), VK_BACKSLASH, output (by scancode): VK_BACKSLASH, output char code:VK_RWIN
0x001B 0x5D //input (line): 221(0xdd), VK_RBRACKET, output (by scancode): VK_RBRACKET, output char code:VK_APPS
0x0028 0x27 //input (line): 222(0xde), VK_APOSTROPHE, output (by scancode): VK_APOSTROPHE, output char code:VK_RIGHT
0x0000 0x00 //input (line): 223(0xdf), VK_OFF, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 224(0xe0), undef_0xE0, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 225(0xe1), undef_0xE1_SCAN, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 226(0xe2), VK_EXTEND_BSLASH, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x3B 0x00 //mappped 227 to scancode 0x003B VK=undef_0xE3
0x3C 0x00 //mappped 228 to scancode 0x003C VK=undef_0xE4
0x00 0x00 //input (line): 229(0xe5), VK_PROCESSKEY, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x3D 0x00 //mappped 230 to scancode 0x003D VK=undef_0xE6
0x00 0x00 //input (line): 231(0xe7), undef_0xE7, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x00 0x00 //input (line): 232(0xe8), undef_0xE8, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x3E 0x00 //mappped 233 to scancode 0x003E VK=undef_0xE9
0x3F 0x00 //mappped 234 to scancode 0x003F VK=undef_0xEA
0x40 0x00 //mappped 235 to scancode 0x0040 VK=undef_0xEB
0x41 0x00 //mappped 236 to scancode 0x0041 VK=undef_0xEC
0x42 0x00 //mappped 237 to scancode 0x0042 VK=undef_0xED
0x43 0x00 //mappped 238 to scancode 0x0043 VK=undef_0xEE
0x44 0x00 //mappped 239 to scancode 0x0044 VK=undef_0xEF
0x0000 0x00 //input (line): 240(0xf0), undef_0xF0, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 241(0xf1), undef_0xF1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 242(0xf2), undef_0xF2, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 243(0xf3), undef_0xF3, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 244(0xf4), undef_0xF4, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 245(0xf5), undef_0xF5, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 246(0xf6), VK_ATTN, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 247(0xf7), VK_CRSEL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 248(0xf8), VK_EXSEL, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 249(0xf9), VK_EREOF, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 250(0xfa), VK_PLAY, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 251(0xfb), VK_ZOOM, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 252(0xfc), VK_NONAME, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 253(0xfd), VK_PA1, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 254(0xfe), VK_OEM_CLEAR, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
0x0000 0x00 //input (line): 255(0xff), VK_undef_0xff, output (by scancode): VK_NOTDEF, output char code:VK_NOTDEF
